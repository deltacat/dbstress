[connection]

[[connection.influxdb]]
name = "Influx1.x" 
default = true 
url = "http://127.0.0.1:8086" 
api-version = 1
tls-skip-verify = false # Skip verify in for TLS
precision = "n" # Resolution of data being written
consistency = "one" # Write consistency (only applicable to clusters)

[connection.influxdb.v1]
user = "" 
pass = "" 
db = "stress" # Database that will be written to
rp = "" # Retention Policy that will be written to

[[connection.influxdb]]
name = "Influx2" 
default = true 
url = "http://127.0.0.1:8286" 
api-version = 2
tls-skip-verify = false # Skip verify in for TLS
precision = "n" # Resolution of data being written
consistency = "one" # Write consistency (only applicable to clusters)

[connection.influxdb.v2]
token = "xxxxxxxxxxxxxxx" # ask your db admin
org-id = "xxxxxxxxxxxxxxx" # ask your db admin
bucket = "stress" # bucket that will be written to

[[connection.mysql]]
name = "MySQL8" # connection name
default = true # if this is default mysql connection
host = "127.0.0.1:3308" # mysql host:port
user = "root" 
pass = "docker" 
db = "stress" # mysql db to write

[points]
measurement = "ctr"
series-key = "some=tag,other=tag"
fields-str = "n=0i,data=str,log=str"

# pending cases to run
[cases]
delay = "5s" # delay between cases
fast = true
tick = "1s"
cases-filter = []

[[cases.case]]
name = "Influx1"
connection = "Influx1.x"
concurrent = 20
batch-size = 10000
runtime = "30s"

[[cases.case]]
name = "Influx2"
connection = "Influx2"
concurrent = 20
batch-size = 10000
runtime = "30s"

[[cases.case]]
name = "MySQL"
connection = "MySQL8"
concurrent = 20
batch-size = 10000
runtime = "30s"